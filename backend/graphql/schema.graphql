type Time {
    hour: Int!
    minute: Int!
}

type Date {
    year: Int!
    month: Int!
    day: Int!
}

type Task {
    id: Int!
    start_time: Time
    end_time: Time
    date: Date!
    basic_info: String
    description: String
    category: String!
    repetition: TaskRepetition
}

type TaskRepetition {
    type: String!
    count: Int!
}

input InputTime {
    hour: Int!
    minute: Int!
}

input InputDate {
    year: Int!
    month: Int!
    day: Int!
}

type ToDo {
    id: Int!
    group_id: Int!
    content: String
    priority: Int!
    done: Boolean!
}

type ToDoPriority {
    id: Int!
    priority: Int!
}

type ToDoGroup {
    id: Int!
    name: String
    ordinal: Int!
    tickets: [ToDo]!
}

type ToDoGroupOrdinal {
    id: Int!
    ordinal: Int!
}

type Config {
  calendarMonthView: CalendarMonthView
}

type CalendarMonthView {
  fontSize: Int!
}


type Query {
    fetchTasks(month: Int, year: Int, id: [Int]): [Task]
    fetchTodos(id: [Int]): [ToDo]
    fetchTodoGroups(id: [Int]): [ToDoGroup]
    config: Config
}


type Mutation {
    createTask(start_time: InputTime, end_time: InputTime, date: InputDate!, basic_info: String, description: String, category: String!): Int
    updateTask(id: Int!, start_time: InputTime, end_time: InputTime, date: InputDate!, basic_info: String, description: String, category: String!): Boolean!
    deleteTask(id: Int!): Boolean!

    createTodoGroup(name: String, ordinal: Int): Int
    modifyTodoGroup(id: Int!, name: String, ordinal: Int): Boolean!
    deleteTodoGroup(id: [Int]!): Boolean!
    moveTodoGroup(id: Int!, up: Boolean, down: Boolean): [ToDoGroupOrdinal]

    createTodo(content: String, group_id: Int!, priority: Int): Int
    modifyTodo(id: Int!, content: String, priority: Int, group_id: Int, done: Boolean): Boolean!
    deleteTodo(id: [Int]!): Boolean!
    moveTodo(id: Int!, target_id: Int!): [ToDoPriority]

    updateCalendarMonthViewFontSize(size: Int!): Boolean!
}
